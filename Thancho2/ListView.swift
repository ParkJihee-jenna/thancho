////
////  ListView.swift
////  Thancho2
////
//////  Created by Î∞ïÏßÄÌù¨ on 4/16/25.
import SwiftUI

struct JournalCardExampleView: View {

    // üîπ ÏùºÍ∏∞ Ïπ¥Îìú Îç∞Ïù¥ÌÑ∞ ÏûÖÎ†•: ÎÇ†Ïßú, Í∏Ä, Ïù¥ÎØ∏ÏßÄ Ìè¨Ìï®
    struct JournalCard {
        let date: String
        let content: String
        let images: [UIImage] // Ïó¨Îü¨ Ïù¥ÎØ∏ÏßÄÎ•º Ìè¨Ìï®
    }

    // üî∏ ÏÉòÌîå Îç∞Ïù¥ÌÑ∞
    @State private var journalCards: [JournalCard] = [
        JournalCard(
            date: "2025. 04. 09 ÏàòÏöîÏùº",
            content: """
            1. Ïï†Ï†ïÌïòÎäî ÏÇ¨ÎûåÎì§Í≥º ÎßõÏûàÎäî Ï†êÏã¨ Î®πÏùÑ Ïàò ÏûàÏùåÏóê Í∞êÏÇ¨
            2. Î≤öÍΩÉÏù¥ ÎÑàÎ¨¥ ÏïÑÎ¶ÑÎã§ÏõåÏÑú Î≥¥Îäî ÎààÏù¥ Ï¶êÍ±∞ÏõåÏÑú Í∞êÏÇ¨
            3. Ï¢ãÏùÄ ÌåÄÏõêÎì§ÏùÑ ÎßåÎÇòÏÑú ÌñâÎ≥µÌïòÍ≤å ÌîÑÎ°úÏ†ùÌä∏Ìï¥ÏÑú Í∞êÏÇ¨
            """,
            images: []
        ),
        JournalCard(
            date: "2025. 04. 10 Î™©ÏöîÏùº",
            content: """
            1. ÎßëÏùÄ Í≥µÍ∏∞Î•º ÎßàÏã§ Ïàò ÏûàÏñ¥ÏÑú Í∞êÏÇ¨
            2. Í∏∏ÏùÑ Í∞ÄÎã§ Í≥†ÏñëÏù¥Í∞Ä ÎÇòÌïúÌÖå Îã§Í∞ÄÏôÄÏ§òÏÑú Í∞êÏÇ¨
            3. Îëê Î∞úÎ°ú Í±∏Ïñ¥Îã§Îãê Ïàò ÏûàÏñ¥ÏÑú Í∞êÏÇ¨
            """,
            images: [UIImage(systemName: "photo")!]
        ),
        JournalCard(
            date: "2025. 04. 11 Í∏àÏöîÏùº",
            content: """
            1. ÎßõÏßëÏùÑ Î∞úÍ≤¨Ìï¥ÏÑú Í∞êÏÇ¨
            2. ÏÇ¨Ïû•ÎãòÏù¥ ÎÑàÎ¨¥ÎÇòÎèÑ ÏπúÏ†àÌïòÍ≤å ÎåÄÌï¥Ï£ºÏÖîÏÑú Í∞êÏÇ¨
            3. Î∂ÄÎ™®ÎãòÏù¥ Í±¥Í∞ïÌïòÏÖîÏÑú Í∞êÏÇ¨
            """,
            images: []
            ),
        JournalCard(
            date: "2025. 04. 12 ÌÜ†ÏöîÏùº",
            content: """
            1. Ïñ∏ÎãàÍ∞Ä ÌûòÎÇ¥ÎùºÍ≥† Ïö©ÎèàÏùÑ Î≥¥ÎÇ¥Ï§òÏÑú Í∞êÏÇ¨
            2. Ïò§Îπ†Í∞Ä Í±¥Í∞ïÌïòÎùºÍ≥† Ïú†ÏÇ∞Í∑†ÏùÑ Î≥¥ÎÇ¥Ï§òÏÑú Í∞êÏÇ¨
            3. Ïò§ÎûúÎßåÏóê ÏïÖÍ∏∞ Ïó∞ÏäµÏùÑ Ìï† Ïàò ÏûàÏñ¥ÏÑú Í∞êÏÇ¨
            """,
            images: [
                UIImage(systemName: "photo")!,
                UIImage(systemName: "photo.fill")!,
                UIImage(systemName: "photo")!,
                UIImage(systemName: "photo.fill")!
            ]
        ),
        JournalCard(
            date: "2025. 04. 13 ÏùºÏöîÏùº",
            content: """
            1. ÎßòÏóê ÎìúÎäî Ïò∑ÏùÑ ÏÇ¥ Ïàò ÏûàÏñ¥ÏÑú Í∞êÏÇ¨
            2. Î≥¥ÌÉÄÍ∞Ä Í∞ÄÏäµÍ∏∞Î•º ÎπåÎ†§Ï£ºÏñ¥ÏÑú Í∞êÏÇ¨
            3. ÌñâÎ≥µÌïòÎã§Í≥† ÎäêÎÇÑ Ïàò ÏûàÏñ¥ÏÑú Í∞êÏÇ¨
            """,
            images: [UIImage(systemName: "photo")!]
        )
        
    ]

    @State private var selectedYear: Int = Calendar.current.component(.year, from: Date())
    @State private var selectedMonth: Int = Calendar.current.component(.month, from: Date())
    @State private var isDatePickerVisible: Bool = false // ÌåùÏóÖ Ïó¨Î∂Ä

    @State private var showImageViewer: Bool = false
    @State private var selectedImageForViewer: UIImage? = nil

    var body: some View {
        NavigationView {
            ZStack {
                // Î∞∞Í≤ΩÏÉâ
                Color.white.edgesIgnoringSafeArea(.all)

                VStack(spacing: 20) {
                    // üîπ ÏÉÅÎã® Î≤ÑÌäº
                    HStack {
                        // Îí§Î°ú Í∞ÄÍ∏∞ Î≤ÑÌäº
                        Button(action: {
                            print("Îí§Î°ú Í∞ÄÍ∏∞")
                        }) {
                            Image(systemName: "chevron.left")
                                .font(.system(size: 20, weight: .regular))
                                .foregroundColor(.button)
                        }

                        Spacer()

                        // üìÖ ÎÇ†Ïßú ÏÑ†ÌÉù Î≤ÑÌäº
                        Button(action: {
                            withAnimation {
                                isDatePickerVisible.toggle()
                            }
                        }) {
                            Text("\(String(selectedYear)) \(monthFormatter(selectedMonth))")
                                .font(Font.custom("Nanum YuNiDdingDdangDdingDdang", size: 32))

                                .foregroundColor(.black)
                        }

                        Spacer()
                    }
                    .padding(.horizontal, 20) // Ïñë ÏòÜ ÎßàÏßÑ

                    // üîπ Î¶¨Ïä§Ìä∏: ScrollView
                    ScrollView {
                        VStack(spacing: 12) {
                            ForEach(journalCards.indices, id: \.self) { index in
                                VStack(alignment: .leading, spacing: 10) {
                                    // ÎÇ†Ïßú
                                    Text(journalCards[index].date)
                                        .font(Font.custom("Nanum YuNiDdingDdangDdingDdang", size: 24))
                                        .foregroundColor(.black)
                                        .frame(maxWidth: .infinity, alignment: .topLeading)

                                    // ÎÇ¥Ïö©
                                    Text(journalCards[index].content)
                                        .font(Font.custom("Nanum YuNiDdingDdangDdingDdang", size: 22))
                                        .foregroundColor(.black)
                                        .frame(maxWidth: .infinity, alignment: .topLeading)

                                    // Ïù¥ÎØ∏ÏßÄ ÌîÑÎ¶¨Î∑∞
                                    if !journalCards[index].images.isEmpty {
                                        HStack(spacing: 8) {
                                            ForEach(Array(journalCards[index].images.prefix(3).enumerated()), id: \.offset) { _, image in
                                                ZStack {
                                                    // Ïù¥ÎØ∏ÏßÄ
                                                    Image(uiImage: image)
                                                        .resizable()
                                                        .frame(width: 40, height: 40) // ÌÅ¨Í∏∞Î•º 60x60ÏúºÎ°ú ÏÑ§Ï†ï
                                                        .cornerRadius(8)
                                                        .onTapGesture {
                                                            selectedImageForViewer = image
                                                            showImageViewer = true
                                                        }

                                                    // Ìà¨Î™ÖÌïú Ïò§Î≤ÑÎ†àÏù¥ (20% Ìà¨Î™ÖÎèÑ)
                                                    Color.black.opacity(0.2)
                                                        .frame(width: 40, height: 40)
                                                        .cornerRadius(8)
                                                }
                                            }

                                            // Ï∂îÍ∞Ä Ïù¥ÎØ∏ÏßÄ ÌëúÏãú ("+N")
                                            if journalCards[index].images.count > 3 {
                                                ZStack {
                                                    Color.black.opacity(0.5)
                                                        .frame(width: 40, height: 40)
                                                        .cornerRadius(8)

                                                    Text("+\(journalCards[index].images.count - 3)")
                                                        .foregroundColor(.white)
                                                        .font(Font.custom("Nanum YuNiDdingDdangDdingDdang", size: 20))
                                                }
                                            }
                                        }
                                    }
                                }
                                .padding(.horizontal, 24) // Í∞úÎ≥Ñ Ïπ¥ÎìúÏùò Ï¢åÏö∞ ÎßàÏßÑ
                                .padding(.vertical, 18)
                                .frame(maxWidth: .infinity, alignment: .leading)
                                .background(Color(red: 0.5, green: 0.69, blue: 0.84).opacity(0.2)) // Ïπ¥Îìú Î∞∞Í≤ΩÏÉâ
                                .cornerRadius(12)
                            }
                        }
                        .padding(.horizontal, 20) // Ïπ¥Îìú Í∞Ñ ÎßàÏßÑ Ï∂îÍ∞Ä
                    }

                    Spacer()
                }

                // üîπ ÎÖÑ/Ïõî ÏÑ†ÌÉù ÌåùÏóÖ
                if isDatePickerVisible {
                    VStack(spacing: 16) {
                        Spacer()

                        VStack {
                            Picker("ÎÖÑÎèÑ ÏÑ†ÌÉù", selection: $selectedYear) {
                                ForEach(2020...2030, id: \.self) { year in
                                    Text("\(String(year))").tag(year)
                                }
                            }
                            .pickerStyle(WheelPickerStyle())
                            .labelsHidden()

                            Picker("Ïõî ÏÑ†ÌÉù", selection: $selectedMonth) {
                                ForEach(1...12, id: \.self) { month in
                                    Text(monthFormatter(month)).tag(month)
                                }
                            }
                            .pickerStyle(WheelPickerStyle())
                            .labelsHidden()
                        }
                        .background(Color.white)
                        .cornerRadius(16)
                        .shadow(radius: 10)
                        .padding()

                        Button(action: {
                            withAnimation {
                                isDatePickerVisible.toggle()
                            }
                        }) {
                            Text("ÌôïÏù∏")
                                .fontWeight(.bold)
                                .foregroundColor(.white)
                                .padding()
                                .background(Color.blue)
                                .cornerRadius(10)
                                .padding(.horizontal, 20)
                        }
                    }
                    .background(Color.black.opacity(0.4).edgesIgnoringSafeArea(.all))
                    .transition(.opacity)
                }
            }
            .sheet(isPresented: $showImageViewer) {
                if let selected = selectedImageForViewer {
                    ZStack {
                        Color.black.ignoresSafeArea()
                        Image(uiImage: selected)
                            .resizable()
                            .scaledToFit()
                            .frame(maxWidth: .infinity, maxHeight: .infinity)

                        Button(action: {
                            showImageViewer = false
                        }) {
                            Image(systemName: "xmark.circle.fill")
                                .foregroundColor(.white)
                                .font(.largeTitle)
                                .padding()
                        }
                    }
                }
            }
        }
    }

    private func monthFormatter(_ month: Int) -> String {
        let formatter = DateFormatter()
        formatter.dateFormat = "MMMM"
        let date = Calendar.current.date(from: DateComponents(year: 2025, month: month))!
        return formatter.string(from: date)
    }
}

struct JournalCardExampleView_Previews: PreviewProvider {
    static var previews: some View {
        JournalCardExampleView()
    }
}

